apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: fresh-delivery
  labels:
    app: backend
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        version: v1
    spec:
      containers:
      - name: backend
        image: ghcr.io/your-org/fresh-delivery/backend:latest
        ports:
        - containerPort: 8080
        env:
        # 从ConfigMap获取配置
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: SPRING_PROFILES_ACTIVE
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: SERVER_PORT
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: MYSQL_HOST
        - name: MYSQL_PORT
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: MYSQL_PORT
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: MYSQL_DATABASE
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: REDIS_PORT
        - name: REDIS_DATABASE
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: REDIS_DATABASE
        - name: WECHAT_APPID
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: WECHAT_APPID
        - name: OSS_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: OSS_ENDPOINT
        - name: OSS_BUCKET
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: OSS_BUCKET
        # 从Secret获取敏感信息
        - name: MYSQL_USERNAME
          valueFrom:
            secretKeyRef:
              name: fresh-delivery-secrets
              key: MYSQL_USERNAME
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fresh-delivery-secrets
              key: MYSQL_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fresh-delivery-secrets
              key: REDIS_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: fresh-delivery-secrets
              key: JWT_SECRET
        - name: WECHAT_SECRET
          valueFrom:
            secretKeyRef:
              name: fresh-delivery-secrets
              key: WECHAT_SECRET
        - name: PAYMENT_KEY
          valueFrom:
            secretKeyRef:
              name: fresh-delivery-secrets
              key: PAYMENT_KEY
        - name: OSS_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: fresh-delivery-secrets
              key: OSS_ACCESS_KEY
        - name: OSS_ACCESS_SECRET
          valueFrom:
            secretKeyRef:
              name: fresh-delivery-secrets
              key: OSS_ACCESS_SECRET
        volumeMounts:
        - name: upload-storage
          mountPath: /app/uploads
        - name: logs-storage
          mountPath: /app/logs
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health/ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
      volumes:
      - name: upload-storage
        persistentVolumeClaim:
          claimName: backend-upload-pvc
      - name: logs-storage
        persistentVolumeClaim:
          claimName: backend-logs-pvc
      imagePullSecrets:
      - name: ghcr-secret
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: fresh-delivery
  labels:
    app: backend
spec:
  selector:
    app: backend
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-upload-pvc
  namespace: fresh-delivery
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: nfs
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-logs-pvc
  namespace: fresh-delivery
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: nfs
---
# HorizontalPodAutoscaler for backend
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: fresh-delivery
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
---
# 测试环境后端部署
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: fresh-delivery-staging
  labels:
    app: backend
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        version: v1
    spec:
      containers:
      - name: backend
        image: ghcr.io/your-org/fresh-delivery/backend:staging
        ports:
        - containerPort: 8080
        env:
        # 从ConfigMap获取配置
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: SPRING_PROFILES_ACTIVE
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: SERVER_PORT
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: MYSQL_HOST
        - name: MYSQL_PORT
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: MYSQL_PORT
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: MYSQL_DATABASE
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: REDIS_PORT
        - name: REDIS_DATABASE
          valueFrom:
            configMapKeyRef:
              name: fresh-delivery-config
              key: REDIS_DATABASE
        # 从Secret获取敏感信息
        - name: MYSQL_USERNAME
          valueFrom:
            secretKeyRef:
              name: fresh-delivery-secrets
              key: MYSQL_USERNAME
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fresh-delivery-secrets
              key: MYSQL_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fresh-delivery-secrets
              key: REDIS_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: fresh-delivery-secrets
              key: JWT_SECRET
        resources:
          requests:
            memory: "256Mi"
            cpu: "125m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health/ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      imagePullSecrets:
      - name: ghcr-secret
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: fresh-delivery-staging
  labels:
    app: backend
spec:
  selector:
    app: backend
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  type: ClusterIP