version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: fresh-delivery-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: fresh_delivery
      MYSQL_USER: fresh_user
      MYSQL_PASSWORD: fresh_pass
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
      - ./mysql/conf:/etc/mysql/conf.d
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - fresh-delivery-network

  # Redis缓存
  redis:
    image: redis:6.2-alpine
    container_name: fresh-delivery-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/etc/redis/redis.conf
    command: redis-server /etc/redis/redis.conf
    networks:
      - fresh-delivery-network

  # 后端服务
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: fresh-delivery-backend
    restart: always
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: fresh_delivery
      MYSQL_USERNAME: fresh_user
      MYSQL_PASSWORD: fresh_pass
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - mysql
      - redis
    volumes:
      - backend_logs:/app/logs
      - backend_uploads:/app/uploads
    networks:
      - fresh-delivery-network

  # 前端管理系统
  admin-frontend:
    build:
      context: ../admin-frontend
      dockerfile: Dockerfile
    container_name: fresh-delivery-admin
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    volumes:
      - ./nginx/admin.conf:/etc/nginx/conf.d/default.conf
    networks:
      - fresh-delivery-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: fresh-delivery-nginx
    restart: always
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - admin-frontend
    networks:
      - fresh-delivery-network

volumes:
  mysql_data:
  redis_data:
  backend_logs:
  backend_uploads:
  nginx_logs:

networks:
  fresh-delivery-network:
    driver: bridge